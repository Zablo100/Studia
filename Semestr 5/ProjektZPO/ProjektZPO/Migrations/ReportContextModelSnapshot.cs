// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektZPO.Data;

#nullable disable

namespace ProjektZPO.Migrations
{
    [DbContext(typeof(ReportContext))]
    partial class ReportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjektZPO.Models.CommentModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("reportId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("reportId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ProjektZPO.Models.ComputerModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("ProjektZPO.Models.ReportModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("date")
                        .HasColumnType("longtext");

                    b.Property<string>("komputer")
                        .HasColumnType("longtext");

                    b.Property<string>("opis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pracownik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ProjektZPO.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjektZPO.Models.CommentModel", b =>
                {
                    b.HasOne("ProjektZPO.Models.ReportModel", "report")
                        .WithMany("comments")
                        .HasForeignKey("reportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("report");
                });

            modelBuilder.Entity("ProjektZPO.Models.ComputerModel", b =>
                {
                    b.HasOne("ProjektZPO.Models.User", "user")
                        .WithOne("computer")
                        .HasForeignKey("ProjektZPO.Models.ComputerModel", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjektZPO.Models.ReportModel", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("ProjektZPO.Models.User", b =>
                {
                    b.Navigation("computer");
                });
#pragma warning restore 612, 618
        }
    }
}
